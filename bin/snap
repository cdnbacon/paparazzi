#!/usr/bin/env node

'use strict';

var argv = require('optimist')
  .usage('Usage: $0 --username <selenium username> --password <selenium password> [--url <webpage url>] --save <dir> [--browser <browser id>]')
  .demand('username')
  .describe('username', 'The selenium server user name')
  .demand('password')
  .describe('password', 'The selenium server password')
  .default('url', '')
  .describe('url', 'The url of the page to screenshot (otherwise pulls from stdio lines)')
  .default('save', './screenshots')
  .describe('save', 'The directory in which to save the screenshots')
  .default('browser', '*')
  .describe('browser', 'The type of browser to test against: IE6-10, Chrome, Safari5-6')
  .argv

var grabber = require('../index');
var moment  = require('moment');
var URIjs   = require('URIjs');
var Q       = require('q');

var selenium = new URIjs('http://ondemand.saucelabs.com/wd/hub')
  .username(argv.username)
  .password(argv.password);

function getUrls() {
  if (argv.url) {
    return Q([argv.url]);
  } else {
    return require('../src/stdin').getUrls();
  }
}

getUrls()
  .done(function(urls){
    var options = {
      dir:      argv.save,
      urls:     urls,
      browser:  argv.browser,
      selenium: selenium.href()
    };

    var start = new Date();

    grabber.grab(options, function(err){
      if (err) console.error(err);
      console.log('Done, took %s', moment.duration(new Date() - start).humanize());
    });
  });